# -*- coding: utf-8 -*-
##                    
#

import subprocess
import os
import os.path

from i3pystatus import Status
from i3pystatus.weather import weathercom
#from i3pystatus.updates import pacman, cower

## Prog Variable
terminal     ="elokab-terminal"
filemanager  ="elokab-fm"
alsacontrol  ="pavucontrol-qt"
## Colors Variable
updatesFColor='#CA4932'

backColor='#1d1f21'

forColor='#c5c8c6'

clockColor='#707880'

alsaColor='#5e8d87'

bklightColor='#cc6666'

networkColor='#81a2be'

batteryColor='#f0c674'

tempColor='#b5bd68'

cpuColor='#b294bb'

memColor='#8abeb7'

diskColor='#c5c8c6'

status = Status(logfile='~/i3pystatus.log')

## Menu -----------------------------------------------------------------[1]
status.register("text",
    text = " ",
    color ="#C359F0",
    ## open my obmenubar
    #on_leftclick = "jgmenu_run",
    on_leftclick = "~/.config/rofi/rofi-sh -r",
    on_rightclick = terminal,
)

## Power ----------------------------------------------------------------[2]
status.register("text",

    text = "  ",
   color ="#E97706",

    on_leftclick = "~/.config/rofi/rofi-sh -s",
    on_rightclick = terminal,
)

## Mpris ----------------------------------------------------------------[3]
status.register("text",
    text = "",
    color ="#00C1FE",
    on_leftclick ="playerctl  -p goldfinch next",
    on_rightclick="goldfinch -togglehide",
)
status.register("shell",
 
        command= "$HOME/.config/qobbar/blocks.sh 14",
         color ="#00C1FE",
        interval=5,
        on_leftclick ="playerctl -p goldfinch play-pause",
        on_rightclick="goldfinch -togglehide",
)
status.register("text",
    text = "",
    color ="#00C1FE",
    on_leftclick ="playerctl -p goldfinch previous",
    on_rightclick="goldfinch -togglehide",
)

status.register("text",
    text = "",
    color ="#f8f8ff",
    on_leftclick ="zenity --text-info --title='weather' --width=260 --height=180  --html --url='wttr.in/algiers_0tqp_lang=fr.png'",
    #rofion_rightclick="goldfinch -togglehide",
)
## weather  ------------------------------------------------------------
# status.register( 'weather',
#     format='{current_temp}{temp_unit}[ {icon}][ {update_error}]',
#      colorize=False,
#      color_icons = {
# 	 'Fair': ('☼ معتدل', '#ffcc00'),
# 	 'Cloudy': ('☁ غائم', '#f8f8ff'),
# 	 'Partly Cloudy': ('☁ غائم جزئيا', '#844747'),
# 	 'Fog': (' الضباب', '#949494'),
# 	 'Sunny': ('☀ مشمس', '#ffff00'),
# 	 'default': ('', None),
# 	 'Rainy': ('⛈ ممطر', '#cbd2c0'),
# 	 'Thunderstorm': ('⚡ عاصفة رعدية', '#cbd2c0'),
# 	 'Snow': ('☃ ثلج', '#ffffff'),
# 	  },

#     hints={'markup': 'pango'},

#     backend=weathercom.Weathercom(
#         location_code='AGXX0001:1:AG',
#         units='metric',
#         ),
# )


## CLOCK ---------------------------------------------------------------[4]
status.register("clock",

    hints       = {"markup": "pango","separator": False,"separator_block_width": 10},
    format      ="<span background='"+alsaColor+"' color ='"+clockColor+"' ></span\
					><span background='"+clockColor+"' > %H:%M </span\
					><span  background='"+clockColor+"'  ></span>",
    color       =backColor,
    interval    =1,
    on_leftclick="zenity --calendar ",
)

## ALSA SOUND ----------------------------------------------------------[5]
status.register("alsa",
    
    hints      = {"markup": "pango","separator": False,"separator_block_width": 0},
    format      = "<span background='"+bklightColor+"' color='"+alsaColor+"'></span\
					><span background='"+alsaColor+"'> {volume}% </span>",

     format_muted    = "<span background='"+bklightColor+"' color='"+alsaColor+"'></span\
	                    ><span background='"+alsaColor+"' > [muted] </span>",
     on_leftclick    = "amixer -D pulse set Master toggle",
     on_rightclick   = alsacontrol,
     color           = backColor,
     color_muted     = '#999979',

)

## BACKLIGHT -----------------------------------------------------------[6]
status.register("backlight",
    interval    =5,
    color       = backColor,
     hints      = {"markup": "pango","separator": False,"separator_block_width": 0},
    format      = "<span background='"+networkColor+"' color='"+bklightColor+"'></span\
					><span background='"+bklightColor+"'> {percentage:.0f}% </span>",
    backlight   ="intel_backlight",
)

## WIRRELESS -----------------------------------------------------------[7]
status.register("network",
	interface    ="wlp2s0",
	color_up     = backColor,
	color_down   =backColor,
	hints        = {"markup": "pango","separator": False,"separator_block_width": 0},
	format_up    = "<span background='"+batteryColor+"' color='"+networkColor+"'></span\
					><span background='"+networkColor+"'color='"+backColor+"' > ↓{bytes_recv:6.1f}k</span>",
	format_down  = "<span background='"+batteryColor+"' color='"+networkColor+"'></span\
					><span background='"+networkColor+"' ></span>",
	on_leftclick = "cmst"
)

## BATTERY -------------------------------------------------------------[8]
status.register("battery",
    battery_ident   ="BAT1",
    interval        =3,
    hints           = {"markup": "pango","separator": False,"separator_block_width": 0},
    format          = "<span background='"+tempColor+"' color='"+batteryColor+"'></span\
						><span background='"+batteryColor+"'>{status} {percentage:.0f}%</span>",
    alert           =True,
    alert_percentage=30,
    color           =backColor,
    critical_color  ="#FF1919",
    charging_color  =backColor,
    full_color      =backColor,
    status={
        "DIS":" ",
        "CHR":" ",
        "FULL":" ",
    },
)

## TEMPIRATURE ---------------------------------------------------------[9]
status.register("temp",
	hints        = {"markup": "pango","separator": False,"separator_block_width": 0},
    format       = "<span background='"+memColor+"' color='"+tempColor+"'></span\
					><span background='"+tempColor+"'  color='"+backColor+"'> {temp}°</span>",
    color        =backColor,
    #dynamic_color=True,
    #lm_sensors_enabled=True,
    alert_color  = "#ff5500",
    alert_temp   = 60,
)

## MEMORY --------------------------------------------------------------[10]
status.register("mem",
  	hints       = {"markup": "pango","separator": False,"separator_block_width": 0},
    color       =backColor,
    warn_color  =backColor,
    alert_color ="#FF1919",
    format      = "<span background='"+cpuColor+"' color='"+memColor+"'></span\
                 ><span background='"+memColor+"' > {percent_used_mem}%</span>",
    
)

## CPU USAGE -----------------------------------------------------------[11]
status.register("cpu_usage",
	color          =backColor,
	hints          = {"markup": "pango","separator": False,"separator_block_width": 0},
    format         = "<span background='"+diskColor+"'color='"+cpuColor+"'></span\
						><span background='"+cpuColor+"' > {usage}%</span>",
    interval=5, 
    on_leftclick   =terminal+" -e 'htop'",          
)

## DISK USAGE ----------------------------------------------------------[12]
status.register("disk",
    hints       ={"markup": "pango","separator": False,"separator_block_width": 0},
    color       =backColor,
    path        ="/",
    on_leftclick=filemanager,
    format      ="<span  color='"+diskColor+"'></span\
                ><span background='"+diskColor+"' > {avail}G</span>",
)

## Window title  -------------------------------------------------------[13]
status.register("window_title",
  #command ="xdotool getactivewindow getwindowname" ,
   max_width =50,
   color=forColor,
)

status.run()
