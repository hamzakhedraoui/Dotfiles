# -*- coding: utf-8 -*-
#
import subprocess
import os
import os.path

from i3pystatus import Status
from i3pystatus.updates import pacman, cower

## Prog Variable
terminal     ="elokab-terminal"
filemanager  ="pcmanfm"

## Colors Variable
updatesFColor=  '#CA4932'
backColor    =  '#222D32'
forColor     =  '#EAD49B'

clockColor   =  '#0093b8'
clockFColor  =  '#BAE9E2'

alsaColor    =  '#4EC4B4'
alsaFColor   =  '#256CB3'

bklightColor =  '#01B37B'
bklightFColor=  '#BAE9E2'

networkColor =  '#0093b8'
networkFColor=  '#BAE9E2'

batteryColor =  '#4EC4B4'
batteryFColor=  '#C53400'

tempColor   =   '#D35840'
tempFColor  =   '#BAE9E2'

cpuColor    =   '#0093b8'
cpuFColor   =   '#BAE9E2'

memColor    =   '#4EC4B4'
memFColor   =   '#256CB3'

diskColor   =   '#01B37B'
diskFColor  =   '#BAE9E2'

status = Status()

## Menu ----------------------------------------------------------------
status.register("text",
    text = " ",
    ## open my obmenubar
    #on_leftclick = "jgmenu_run",
    on_leftclick = "~/.config/rofi/rofi-sh -R",
    ## open terminal
    on_rightclick = terminal,
)

## Mpd  ----------------------------------------------------------------
status.register("mpd",
    format = "{status}",
    status = {
        "pause": "",
        "play": "",
        "stop": "",
    },

    #on_middleclick = change_server,
    # on_upscroll="mpc seek +00:00:05",
    # on_downscroll="mpc seek -00:00:05",
    on_rightclick = "~/.config/rofi/rofi-menu-mpd",
)

## Updates -------------------------------------------------------------
#status.register("updates",

#    format              = ":{count}",
#    format_no_updates   = "",
#    on_leftclick        =terminal+" -e 'sudo pacman -Syu'",
#    color               =updatesFColor,
#    backends            = [pacman.Pacman(), cower.Cower()]

#)

## Displays clock like this:
## Tue 30 Jul 11:59:46 PM KW31
##                          ^-- calendar week
## CLOCK ---------------------------------------------------------------

status.register("clock",

    hints       = {"markup": "pango","separator": False,"separator_block_width": 10},
    format      ="<span background='"+alsaColor+"' color ='"+clockColor+"' ></span\
					><span background='"+clockColor+"' >  %H:%M:%S </span\
					><span background='"+clockColor+"' color ='"+backColor+"' ></span>",
    color       =clockFColor,
    interval    =1,
    on_leftclick="zenity --calendar --text ''",
)

## CAL -----------------------------------------------------------------
#status.register("clock",
    #format="  %a %d-%m-%Y ",
    #color='#61AEEE',
    #interval=1,)
     #"  %H:%M:%S"
     
## ALSA SOUND ----------------------------------------------------------
status.register("alsa",
    
    hints      = {"markup": "pango","separator": False,"separator_block_width": 0},
    format      = "<span background='"+bklightColor+"' color='"+alsaColor+"'></span\
					><span background='"+alsaColor+"'>{volume}% </span>",

     format_muted    = "<span background='"+bklightColor+"' color='"+alsaColor+"'></span\
	                    ><span background='"+alsaColor+"' > [muted] </span>",



     on_leftclick    = "amixer -D pulse set Master toggle",
     on_rightclick   = "pavucontrol",
     color           =alsaFColor,
     color_muted     = '#E06C75',
     

)

## BACKLIGHT -----------------------------------------------------------
status.register("backlight",
    interval    =5,
    color       = bklightFColor,
    #format     =" {percentage:.0f}%",
     hints      = {"markup": "pango","separator": False,"separator_block_width": 0},
    format      = "<span background='"+networkColor+"' color='"+bklightColor+"'></span\
					><span background='"+bklightColor+"'> {percentage:.0f}% </span>",
    backlight   ="intel_backlight",
)

## WIRRELESS -----------------------------------------------------------
status.register("network",
	interface    ="wlp2s0",
	color_up     = networkFColor,
	color_down   =networkFColor,
	hints        = {"markup": "pango","separator": False,"separator_block_width": 0},
	#format_up   =" {essid}  {bytes_recv:6.1f}KiB",
	format_up    = "<span background='"+batteryColor+"' color='"+networkColor+"'></span\
					><span background='"+networkColor+"'color='"+networkFColor+"' >{essid} {bytes_recv:6.1f}k {bytes_sent:5.1f}k</span>",
	format_down  = "<span background='"+batteryColor+"' color='"+networkColor+"'></span\
					><span background='"+networkColor+"' ></span>",
	on_leftclick = "firefox"
)

## BATTERY -------------------------------------------------------------
status.register("battery",
    battery_ident   ="BAT1",
    interval        =3,
    #format         ="{status} {percentage:.0f}%",
    hints           = {"markup": "pango","separator": False,"separator_block_width": 0},
    format          = "<span background='"+tempColor+"' color='"+batteryColor+"'></span\
						><span background='"+batteryColor+"'> {status} {percentage:.0f}%</span>",
    alert           =True,
    alert_percentage=30,
    color           =batteryFColor,
    critical_color  ="#FF1919",
    charging_color  ="#008000",
    full_color      ="#256CB3",
    status={
        "DIS": " ",
        "CHR": "  ",
        "FULL": " ",
    },
)

## TEMPIRATURE ---------------------------------------------------------
status.register("temp",
	hints        = {"markup": "pango","separator": False,"separator_block_width": 0},
     #format     = " {temp}°",
    format       = "<span background='"+cpuColor+"' color='"+tempColor+"'></span\
					><span background='"+tempColor+"'  color='"+tempFColor+"'>  {temp}°</span>",
    color        =tempFColor,
    alert_color  = "#FFEF00",
    alert_temp   = 60,
)

## CPU USAGE -----------------------------------------------------------
status.register("cpu_usage",
	color          =cpuFColor,
	hints          = {"markup": "pango","separator": False,"separator_block_width": 0},
	on_leftclick   =terminal+" -e 'htop'",
    format         = "<span background='"+memColor+"' color='"+cpuColor+"'></span\
						><span background='"+cpuColor+"' >  {usage}%</span>",
)

## MEMORY --------------------------------------------------------------
status.register("mem",
  	hints       = {"markup": "pango","separator": False,"separator_block_width": 0},
    color       =memFColor,
    warn_color  ="#E5E500",
    alert_color ="#FF1919",
     #format    =" {percent_used_mem}%",
    format      = "<span background='"+diskColor+"' color='"+memColor+"'></span\
                 ><span background='"+memColor+"' > {percent_used_mem}%</span>",
    
)

## DISK USAGE ----------------------------------------------------------
status.register("disk",
    hints       ={"markup": "pango","separator": False,"separator_block_width": 0},
    color       =diskFColor,
    path        ="/",
    on_leftclick=filemanager,
    #format     =" {avail} GB",
    format      ="<span color='"+diskColor+"'></span\
                ><span background='"+diskColor+"' > {avail} GB</span>",
)

## window_title  -------------------------------------------------------
#status.register("window_title",
#    #command ="xdotool getactivewindow getwindowname" ,
#    max_width =30,
#)

status.run()
